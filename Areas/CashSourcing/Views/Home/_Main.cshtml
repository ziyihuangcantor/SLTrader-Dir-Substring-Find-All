
<script>
    try {
        var traderHubProxy = $.connection.traderHub;

        $.connection.hub.logging = true;

        traderHubProxy.client.updateServiceAction = function (update) {
            console.log(update);
        };

        $.connection.hub.start({ transport: ['webSockets', 'serverSentEvents'], xdomain: true })
        .done(function () { UpdateRealTimeControl("Connected", "lightgreen"); })
        .fail(function () { UpdateRealTimeControl("Failed", "coral"); });

    }
    catch (e) {
        console.log(e.message);
    }

    $.connection.hub.connectionSlow(function () {
        UpdateRealTimeControl("Slow RD", "lightyellow");
    });

    $.connection.hub.reconnecting(function () {
        UpdateRealTimeControl("Reconnecting", "coral");
    });

    var tryingToReconnect = false;

    $.connection.hub.reconnecting(function () {
        tryingToReconnect = true;
    });

    $.connection.hub.reconnected(function () {
        UpdateRealTimeControl("Connected", "lightgreen");
    });

    $.connection.hub.error(function (error) {
        console.log('SignalR error: ' + error)
    });

    $.connection.hub.disconnected(function () {
        setTimeout(function () {
            $.connection.hub.start({ transport: ['webSockets', 'serverSentEvents'], xdomain: true })
                    .done(function () { UpdateRealTimeControl("Connected", "lightgreen"); })
                    .fail(function () { UpdateRealTimeControl("Failed", "coral"); });
        }, 1000);
    });

    function CashSourcingResizeLayout() {
        resizeTabs("#CashSourcingTabStrip", 40);
    }

    $(document).ready(function () {
        initSession('@Url.Action("Index", "Login", new { area = "Login" })');
    });
</script>

<div id="TopBar">@{ Html.RenderPartial("~/Areas/Header/Views/Header/_Header.cshtml", SL_Application.CashSourcing); }</div>
<div id="NavBar">@{ Html.RenderPartial("~/Areas/CashSourcing/Views/Menu/Index.cshtml");}</div>


@(Html.Kendo().Splitter()
      .Name("CashSourcingMainSplitterVertical")
      .Orientation(SplitterOrientation.Horizontal)
      .HtmlAttributes(new { @class = "splitter" })
      .Panes(verticalPanes =>
      {
          verticalPanes.Add()
          .HtmlAttributes(new { id = "SecurityMasterSplitterPanel" })
          .Size("280px")           
            .Collapsible(true)
            .Resizable(true)
            .Scrollable(false)
          .Content(@<text>
                @Html.Partial("~/Areas/DomesticTrading/Views/Shared/_SecurityMaster.cshtml")
            </text>);
                    
            verticalPanes.Add()
                        .HtmlAttributes(new { id = "top-pane" })
                        .Scrollable(false)
                        .Collapsible(false)
                        .Content(
                          Html.Kendo().Splitter()
                              .Name("MainSplitterChild")
                              .HtmlAttributes(new { @class="height100p"})
                              .Orientation(SplitterOrientation.Vertical)
                              .Events(e => e.Collapse("CashSourcingResizeLayout").Resize("CashSourcingResizeLayout").Expand("CashSourcingResizeLayout"))
                              .Panes(horizontalPanes =>
                              {
                                  horizontalPanes.Add()
                                      .HtmlAttributes(new { id = "left-pane", @class="childSplitter" })                                                                         
                                      .Collapsible(true)
                                      .Resizable(true)                                  
                                      .Scrollable(false)                                                                          
                                      .Content(@<text>
                                    @Html.Partial("~/Areas/CashSourcing/Views/Tab/Index.cshtml")
                                     </text>);

                                  horizontalPanes.Add()
                                      .HtmlAttributes(new { id = "SharedDetailSplit" })
                                      .Collapsible(true)
                                      .Resizable(true)
                                      .Collapsed(true)
                                      .Size("30%")   
                                      .Scrollable(false)                                     
                                      .Content(@<text>
                                        @Html.Partial("~/Areas/DomesticTrading/Views/Shared/Templates/_SharedDetail.cshtml")
                                    </text>);
                              }).ToHtmlString()
                        );
}))

@(Html.Kendo().Window()
        .Name( "LocalDetailWindow" )
        .Modal( true )
        .AutoFocus( true )
        .Actions( actions =>
        {
            actions.Maximize();
            actions.Close();
        })
        .Visible( false )
        .Draggable( true )
        .Resizable( resize => resize.Enabled( false ) )
        .Animation( amin =>
        {
            amin.Enable( true );
            amin.Open( effect => effect.Zoom( ZoomDirection.In ) );
            amin.Close( close => close.Zoom( ZoomDirection.Out ) );
        } )
        .Iframe( false )
        .Events( events => events.Refresh( "onLocalWindowResize" ) )
        .Scrollable( false )
        .Title( "Details" ))
