@using SLTrader.Tools
@model BondFire.Entities.Projections.SL_BoxCalculationExtendedProjection

<style scoped>
    #BoxCalculationSideTable {
        border-collapse: separate;
        border-spacing: 2px;
    }
</style>

<div id="BoxCalculationBlock" align="center">
    <table id="BoxCalculationSideTable">
        <tr>
            <td></td>
            <td>@LabelHelper.Label("Actual")</td>
            <td></td>
            <td>@LabelHelper.Label("Forcast")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("NetPosition")</td>
            <td class="k-block">@Html.DisplayFor(model => model.NetPositionSettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.NetPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("Excess")</td>
            @if (Model.ExcessPositionSettled < 0)
            {
                <td class="k-block k-notification-error">@Html.DisplayFor(model => model.ExcessPositionSettled, "Decimal")</td>
            }
            else
            {
                <td class="k-block">@Html.DisplayFor(model => model.ExcessPositionSettled, "Decimal")</td>
            }
            <td></td>
            @if (Model.ExcessPositionTraded < 0)
            {
                <td class="k-block k-notification-error">@Html.DisplayFor(model => model.ExcessPositionTraded, "Decimal")</td>
            }
            else
            {
                <td class="k-block">@Html.DisplayFor(model => model.ExcessPositionTraded, "Decimal")</td>
            }
        </tr>
        <tr>
            <td>@LabelHelper.Text("Depository")</td>
            <td class="k-block">@Html.DisplayFor(model => model.DepositorySettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.DepositorySettled, "Decimal")</td>
        </tr>
        @if (SessionService.UserPreference.UserTypeId == SL_UserType.INTERNATIONAL)
        {
            <tr>
                <td>@LabelHelper.Text("DepositoryOther")</td>
                <td class="k-block">@Html.DisplayFor(model => model.DepositoryOtherSettled, "Decimal")</td>
                <td></td>
                <td class="k-block">@Html.DisplayFor(model => model.DepositoryOtherSettled, "Decimal")</td>
            </tr>
        }
        <tr>
            <td>@LabelHelper.Text("SegregationReq")</td>
            <td class="k-block">@Html.DisplayFor(model => model.SegregationReq, "Decimal")</td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("RetailLong")</td>
            <td class="k-block">@Html.DisplayFor(model => model.CustomerLongPositionSettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.CustomerLongPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("InstLong")</td>
            <td class="k-block">@Html.DisplayFor(model => model.FirmLongPositionSettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.FirmLongPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("RetailShort")</td>
            <td class="k-block">@Html.DisplayFor(model => model.CustomerShortPositionSettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.CustomerShortPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("InstShort")</td>
            <td class="k-block">@Html.DisplayFor(model => model.FirmShortPositionSettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.FirmShortPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("RetailPlgSettled")</td>
            <td class="k-block">@Html.DisplayFor(model => model.CustomerBankLoanPositionSettled, "Decimal")</td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("InstPlgSettled")</td>
            <td class="k-block">@Html.DisplayFor(model => model.FirmBankLoanPositionSettled, "Decimal")</td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("OtherPlgSettled")</td>
            <td class="k-block">@Html.DisplayFor(model => model.OtherBankLoanPositionSettled, "Decimal")</td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("StockBorrowSettled")</td>
            <td class="k-block">@Html.DisplayFor(model => model.StockBorrowPositionSettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.StockBorrowPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("StockLoanSettled")</td>
            <td class="k-block">@Html.DisplayFor(model => model.StockLoanPositionSettled, "Decimal")</td>
            <td></td>
            <td class="k-block">@Html.DisplayFor(model => model.StockLoanPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("CnsFTD")</td>
            @if (Model.CnsFailToDeliverPositionSettledDayCount > 1)
            {
                <td class="k-block k-notification-error">@Html.DisplayFor(model => model.CnsFailToDeliverPositionSettled, "Decimal")</td>
                <td class="k-block k-notification-error">@Html.DisplayFor(model => model.CnsFailToDeliverPositionSettledDayCount, "Int32")</td>
                <td class="k-block k-notification-error">@Html.DisplayFor(model => model.CnsFailToDeliverPositionTraded, "Decimal")</td>
            }
            else
            {
                <td class="k-block">@Html.DisplayFor(model => model.CnsFailToDeliverPositionSettled, "Decimal")</td>
                <td class="k-block">@Html.DisplayFor(model => model.CnsFailToDeliverPositionSettledDayCount, "Int32")</td>
                <td class="k-block">@Html.DisplayFor(model => model.CnsFailToDeliverPositionTraded, "Decimal")</td>
            }
        </tr>
        <tr>
            <td>@LabelHelper.Text("DvpFTD")</td>
            <td class="k-block">@Html.DisplayFor(model => model.DvpFailToDeliverPositionSettled, "Decimal")</td>
            <td class="k-block">@Html.DisplayFor(model => model.DvpFailToDeliverPositionSettledDayCount, "Int32")</td>
            <td class="k-block">@Html.DisplayFor(model => model.DvpFailToDeliverPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("BrokerFTD")</td>
            <td class="k-block">@Html.DisplayFor(model => model.BrokerFailToDeliverPositionSettled, "Decimal")</td>
            <td class="k-block">@Html.DisplayFor(model => model.BrokerFailToDeliverPositionSettledDayCount, "Int32")</td>
            <td class="k-block">@Html.DisplayFor(model => model.BrokerFailToDeliverPositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("CnsFTR")</td>
            <td class="k-block">@Html.DisplayFor(model => model.CnsFailToRecievePositionSettled, "Decimal")</td>
            <td class="k-block">@Html.DisplayFor(model => model.CnsFailToRecievePositionSettledDayCount, "Int32")</td>
            <td class="k-block">@Html.DisplayFor(model => model.CnsFailToRecievePositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("DvpFTR")</td>
            <td class="k-block">@Html.DisplayFor(model => model.DvpFailToRecievePositionSettled, "Decimal")</td>
            <td class="k-block">@Html.DisplayFor(model => model.DvpFailToRecievePositionSettledDayCount, "Int32")</td>
            <td class="k-block">@Html.DisplayFor(model => model.DvpFailToRecievePositionTraded, "Decimal")</td>
        </tr>
        <tr>
            <td>@LabelHelper.Text("BrokerFTR")</td>
            <td class="k-block">@Html.DisplayFor(model => model.BrokerFailToRecievePositionSettled, "Decimal")</td>
            <td class="k-block">@Html.DisplayFor(model => model.BrokerFailToRecievePositionSettledDayCount, "Int32")</td>
            <td class="k-block">@Html.DisplayFor(model => model.BrokerFailToRecievePositionTraded, "Decimal")</td>
        </tr>
    </table>
</div>
