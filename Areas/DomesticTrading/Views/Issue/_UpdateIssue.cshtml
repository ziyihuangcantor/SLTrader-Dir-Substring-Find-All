@using SLTrader.Tools
@model IssueBundle

<style scoped>
    #StatusLabel {
       word-wrap:break-word;
       max-width:100px;
    }
</style>
<script>  
    $('#TickerTextBox').on('focus', function () {
        var input = $(this);
        setTimeout(function () { input.select(); });
    });

    $('#DescriptionTextBox').on('focus', function () {
        var input = $(this);
        setTimeout(function () { input.select(); });
    });

    $('#IssuePriceNumericBox').on('focus', function () {
        var input = $(this);
        setTimeout(function () { input.select(); });
    });
    
    function PostIssueChange() {
        try {
            var form = $("#my-form");

            $.ajax({
                    url: "@Url.Action("UpdateIssueBundle", "Issue", new { area = "DomesticTrading" })",
                    data: form.serializeArray(),
                type: "POST",
                success: function () {
                    $("#StatusLabel").text("Issue updated.");

                    var securityNumber = document.getElementById("CusipTextBox").value;
                    var entityId = $("#SecMasterDropdownList").data("kendoDropDownList").value();

                    UpdateIssue(entityId, securityNumber);

                    $('#LocalDetailWindow').data("kendoWindow").close();
                },
                error: function (e) {
                    $('#StatusLabel').text(DisplayControllerErrorByString(e));
                }
            });
        } 
        catch (e) {
            console.log(e.message);
        } 
    }
</script>
<div id="TradeAddDiv" class="table-form">
    @using (Html.BeginForm("Action", "ControllerName", FormMethod.Post, new {id = "my-form"}))
    {
        <table>
            <tr>
                <td>
                    @LabelHelper.Text("Cusip")
                </td>
                <td>
                    @Html.Kendo().TextBoxFor(m => m.Issue.Cusip).HtmlAttributes( new {ID = "CusipTextBox"})     
                </td>
                <td>
                    @LabelHelper.Text("Ticker")
                </td>
                <td>
                    @Html.Kendo().TextBoxFor(m => m.Issue.Ticker).HtmlAttributes( new {ID = "TickerTextBox"})
                </td>
            </tr>
            <tr>
                <td>
                    @LabelHelper.Text("ISIN")
                </td>
                <td>
                    @Html.Kendo().TextBoxFor(m => m.Issue.ISIN).HtmlAttributes( new { ID = "IsinTextBox", })
                </td>
                <td>
                    @LabelHelper.Text("Sedol")
                </td>
                <td>
                    @Html.Kendo().TextBoxFor(m => m.Issue.SEDOL).HtmlAttributes( new { ID = "SedolTextBox"})
                </td>
            </tr>
            <tr>
                <td>
                    @LabelHelper.Text("CountryIssued")
                </td>
                <td>
                    @(Html.Kendo().AutoCompleteFor(model => model.Issue.CountryIssued)
                                .HtmlAttributes(new { ID = "IssueCountryCodeDropdownList"})
                                .Suggest(true)
                                .BindTo(Enum.GetNames(typeof(Country)).ToList())
                                .Value(Model.Issue.CountryIssued.ToString()))
                </td>
                <td>
                    @LabelHelper.Text("DTCEligible")
                </td>
                <td>
                    @(Html.Kendo().AutoCompleteFor(model => model.Issue.DtccEligible)
                                .HtmlAttributes(new { ID = "IssueDtccEligibleDropdownList"})
                                .Suggest(true)
                                .BindTo(Enum.GetNames(typeof(DtccEligibleType)).ToList())
                                .Value(Model.Issue.DtccEligible.ToString()))
                </td>
            </tr>
            <tr>
                <td>
                    @LabelHelper.Text("Description")
                </td>
                <td colspan="3">
                    @Html.Kendo().TextBoxFor(m => m.Issue.Description_1).HtmlAttributes(new {ID = "IssueDescriptionTextBox", @class = "width100p"})
                </td> 
            </tr>
            <tr>
                <td>
                    @LabelHelper.Text("Description")
                </td>
                <td colspan="3">
                    @Html.Kendo().TextBoxFor(m => m.Issue.Description_2).HtmlAttributes( new { ID = "IssueDescription2TextBox", @class = "width100p" })
                </td>
            </tr>     
            <tr>
                <td>
                    @LabelHelper.Text("IssuePrice")
                </td>
                <td>
                    @Html.Kendo().NumericTextBoxFor(m => m.IssuePrice.CurrentCashPrice).HtmlAttributes(new {ID = "IssuePriceNumericBox"})
                </td>
                <td>
                    @LabelHelper.Text("IssuePriceDate")
                </td>
                <td>
                    @Html.Kendo().DatePickerFor(m => m.IssuePrice.DateTimeId).Name("IssueDateTimeId").HtmlAttributes(new { @readonly = "readyonly" })
                </td>
            </tr>
            <tr>
                <td>
                    @LabelHelper.Text("BasisType")
                </td>
                <td>
                    @(Html.Kendo().AutoCompleteFor(model => model.Issue.BasisType)
                                .HtmlAttributes(new { ID = "IssueBasisTypeDropdownList" })
                                .Suggest(true)
                                .BindTo(Enum.GetNames(typeof(BasisType)).ToList())
                                .Value(Model.Issue.BasisType.ToString()))
                </td>
                <td>
                    @LabelHelper.Text("IssueCalcType")
                </td>
                <td>
                    @(Html.Kendo().AutoCompleteFor(model => model.Issue.IssueCalcType)
                                .HtmlAttributes(new { ID = "IssueCalcTypeDropdownList" })
                                .Suggest(true)
                                .BindTo(Enum.GetNames(typeof(IssueCalcType)).ToList())
                                .Value(Model.Issue.IssueCalcType.ToString()))
                </td>
            </tr>
            <tr>
                <td colspan="4" style="width: 100%">
                   <label id="StatusLabel" style="max-width:200px;word-wrap:break-word;"></label>
                </td>
            </tr>   
            <tr>
                <td colspan="4" style="text-align: right">
                    @Html.Kendo().Button().Name("PostIssueChangeButton").Content(@LabelHelper.Text("PostIssueChange")).Events(ev => ev.Click("PostIssueChange"))                    
                </td>
            </tr>
        </table>

        @Html.HiddenFor(x => x.EntityId)        
        @Html.HiddenFor(x => x.Issue.AuctionDate)
        @Html.HiddenFor(x => x.Issue.BasisType)
        @Html.HiddenFor(x => x.Issue.CIN)
        @Html.HiddenFor(x => x.Issue.CallDate)
        @Html.HiddenFor(x => x.Issue.CallPrice)
        @Html.HiddenFor(x => x.Issue.Composite)
        @Html.HiddenFor(x => x.Issue.Coupon)
        @Html.HiddenFor(x => x.Issue.CouponIndex)
        @Html.HiddenFor(x => x.Issue.CouponMonth)
        @Html.HiddenFor(x => x.Issue.CustomRatingId)
        @Html.HiddenFor(x => x.Issue.DateTimeId)
        @Html.HiddenFor(x => x.Issue.DatedDate)
        @Html.HiddenFor(x => x.Issue.Denomination)
        @Html.HiddenFor(x => x.Issue.Description_2)
        @Html.HiddenFor(x => x.Issue.Description_3)
        @Html.HiddenFor(x => x.Issue.Description_4)
        @Html.HiddenFor(x => x.Issue.FirstCouponDate)
        @Html.HiddenFor(x => x.Issue.Fitch)
        @Html.HiddenFor(x => x.Issue.ISIN)
        @Html.HiddenFor(x => x.Issue.CountryIssued)
        @Html.HiddenFor(x => x.Issue.DtccEligible)
        @Html.HiddenFor(x => x.Issue.IsFloater)
        @Html.HiddenFor(x => x.Issue.IsInternal)
        @Html.HiddenFor(x => x.Issue.IsTradeable)
        @Html.HiddenFor(x => x.Issue.IsWI)
        @Html.HiddenFor(x => x.Issue.IssueCalcType)
        @Html.HiddenFor(x => x.Issue.IssueCategoryId)
        @Html.HiddenFor(x => x.Issue.IssueCouponFrequency)
        @Html.HiddenFor(x => x.Issue.IssueCouponType)
        @Html.HiddenFor(x => x.Issue.IssueDate)
        @Html.HiddenFor(x => x.Issue.IssueDateBucket)
        @Html.HiddenFor(x => x.Issue.IssueId)
        @Html.HiddenFor(x => x.Issue.IssueIndexReset)
        @Html.HiddenFor(x => x.Issue.IssueMaturityType)
        @Html.HiddenFor(x => x.Issue.Issuer)
        @Html.HiddenFor(x => x.Issue.LastCouponDate)
        @Html.HiddenFor(x => x.Issue.MarketSymbol)
        @Html.HiddenFor(x => x.Issue.Maturity)
        @Html.HiddenFor(x => x.Issue.Moodys)
        @Html.HiddenFor(x => x.Issue.NextCouponDate)
        @Html.HiddenFor(x => x.Issue.OddSecondCouponDate)
        @Html.HiddenFor(x => x.Issue.PoolNumber)
        @Html.HiddenFor(x => x.Issue.PoolType)
        @Html.HiddenFor(x => x.Issue.PriceBase)
        @Html.HiddenFor(x => x.Issue.RedemptionValue)
        @Html.HiddenFor(x => x.Issue.ResetDate)
        @Html.HiddenFor(x => x.Issue.ResetFrequency)
        @Html.HiddenFor(x => x.Issue.RevisionId)
        @Html.HiddenFor(x => x.Issue.RowVersion)
        @Html.HiddenFor(x => x.Issue.SEDOL)
        @Html.HiddenFor(x => x.Issue.SecNumber)
        @Html.HiddenFor(x => x.Issue.StdPoors)
        @Html.HiddenFor(x => x.Issue.WIAssumedCoupon)
        @Html.HiddenFor(x => x.Issue.WISettleDate)
        @Html.HiddenFor(x => x.IssuePrice.AskPrice)
        @Html.HiddenFor(x => x.IssuePrice.AskPrice_Tier2)
        @Html.HiddenFor(x => x.IssuePrice.AskSpread_Tier1)
        @Html.HiddenFor(x => x.IssuePrice.AskSpread_Tier2)
        @Html.HiddenFor(x => x.IssuePrice.BidPrice)
        @Html.HiddenFor(x => x.IssuePrice.BidPrice_Tier2)
        @Html.HiddenFor(x => x.IssuePrice.BidSpread_Tier1)
        @Html.HiddenFor(x => x.IssuePrice.BidSpread_Tier2)
        @Html.HiddenFor(x => x.IssuePrice.CloseCashPrice)
        @Html.HiddenFor(x => x.IssuePrice.ClosePrice)
        @Html.HiddenFor(x => x.IssuePrice.CloseRepoPrice)
        @Html.HiddenFor(x => x.IssuePrice.CloseYield)
        @Html.HiddenFor(x => x.IssuePrice.CurrentRepoPrice)
        @Html.HiddenFor(x => x.IssuePrice.CurrentYield)
        @Html.HiddenFor(x => x.IssuePrice.DateTimeId)
        @Html.HiddenFor(x => x.IssuePrice.EffectiveDate)
        @Html.HiddenFor(x => x.IssuePrice.IssueId)
        @Html.HiddenFor(x => x.IssuePrice.IssuePriceId)
        @Html.HiddenFor(x => x.IssuePrice.IssuePriceService)
        @Html.HiddenFor(x => x.IssuePrice.RevisionId)
        @Html.HiddenFor(x => x.IssuePrice.RowVersion)
        @Html.HiddenFor(x => x.IssuePrice.Source)
        @Html.HiddenFor(x => x.IssuePrice.StartCashPrice)
        @Html.HiddenFor(x => x.IssuePrice.StartRepoPrice)
        @Html.HiddenFor(x => x.IssuePrice.StartYield)        
    }
    </div>