@using SLTrader.Enums
@using SLTrader.Helpers.SessionHelper
@using SLTrader.Tools

@model IEnumerable<Issue>

<style scoped>
    #IssueSearchCriteriaContent {
        width:600px;
        height:300px;
    }
</style>

<script>
    function onSecurityResultsChange(e) {

        var entityGrid = $("#IssueSearchCriteriaGrid").data("kendoGrid");
        var selectedItem = entityGrid.dataItem(entityGrid.select());

        var effectiveDate = Date.now();
        var entityId = null;
        var securityNumberCusip = selectedItem["Cusip"];
        var securityNumberSedol = selectedItem["SEDOL"];
        var securityNumberTicker = selectedItem["Ticker"];
        var securityNumberQuick = selectedItem["Qucik"];
        var issueId = selectedItem["IssueId"];

        if ((securityNumberCusip != null) && (securityNumberCusip != '')) {
            SidePanelUpdate(effectiveDate, entityId, issueId, securityNumberCusip);
        }
        else if ((securityNumberSedol != null) && (securityNumberSedol != '')) {
            SidePanelUpdate(effectiveDate, entityId, issueId, securityNumberSedol);
        }
        else if ((securityNumberTicker != null) && (securityNumberTicker != '')) {
            SidePanelUpdate(effectiveDate, entityId, issueId, securityNumberTicker);
        }
        else if ((securityNumberQuick != null) && (securityNumberQuick != '')) {
            SidePanelUpdate(effectiveDate, entityId, issueId, securityNumberQuick);
        }
    }
</script>

<div id="IssueSearchCriteriaContent" class="grid-div">
    @(
 Html.Kendo().Grid(Model)
        .Name("IssueSearchCriteriaGrid")
        .Sortable()
        .HtmlAttributes(new { @class = "grid" })
        .Scrollable()
        .Filterable()
        .NoRecords()
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Navigatable()
        .Events(ev =>
        {
            ev.Change("onSecurityResultsChange");
        })
        .Columns(columns =>
        {
            columns.Bound(x => x.IssueId).GetColumnFormat(ColumnTypeEnum.String, false, "", "").Hidden(true);
            columns.Bound(x => x.Cusip).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.ISIN).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.SEDOL).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Ticker).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Quick).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.CIN).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Description_1).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.CountryIssued).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
        })
        .DataSource(ds =>
        {
            ds.Ajax()
            .Model(m =>
            {
                m.Id(x => x.IssueId);
            });
        }))
</div>