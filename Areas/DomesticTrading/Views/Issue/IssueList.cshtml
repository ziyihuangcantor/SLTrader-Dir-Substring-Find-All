@using SLTrader.Enums
@using SLTrader.Helpers.SessionHelper
@using SLTrader.Tools

<script type="text/javascript">
    var _originalQuickFilterGrid = null;
    var _originalIssueListToolBar = null;

    $('#SharedLabelCheckBox').change(function () {
        RefreshGrid("#IssueListGrid");
    });

    $(document).ready(function () {
        setTimeout(function () {
            _originalQuickFilterGrid = $("#IssueListGrid").data('kendoGrid').getOptions();
            _originalIssueListToolBar = $("#IssueListGrid .k-grid-toolbar").html();

            LoadGridLayout("#IssueListGrid");

            $("#IssueListGrid .k-grid-toolbar").html(_originalIssueListToolBar);
            $("#IssueListGrid .k-grid-toolbar").addClass("k-grid-top");
        }, 5);
    });

    function onQuickFilterLayoutChange(e) {
        e.preventDefault();

        setTimeout(function () {
            UpdateGridLayout("#IssueListGrid");
        }, 5);
    }

    function onQuickFilterCheckData() {
        CheckGridData('#IssueListGrid');
    }

    function createQuickFilterData() {
        var entity = $("#QuickFilterDropdownList").data("kendoDropDownList").value();

        return {
            entityId: entity,
            operatorId: '@Convert.ToInt32(SL_Operator.gte)'
        };
    }

    function additionalQuickFilterData() {
        var entity = $("#QuickFilterDropdownList").data("kendoDropDownList").value();

        return {
            entityId: entity
        };
    }

    function onQuickFilterEdit(e) {
        var input = e.container.find("input");
        setTimeout(function () {
            input.select();
        }, 25);
    }

    function onQuickFilterDefaultLoad() {
        try {
            var userPreference;

            $.ajax({
                url: '/Header/Header/GetUserPreference',
                type: 'POST',
                contentType: 'application/json;',
                success: function(valid) {
                    userPreference = valid;

                    var dropdownList = $('#QuickFilterDropdownList').data("kendoDropDownList");

                    dropdownList.select(function(dataItem) {
                        return dataItem.CompanyId == userPreference.DefaultFirm;
                    });

                    $('#IssueListGrid').data("kendoGrid").dataSource.read();
                },
                error: function(valid) {
                    userPreference = null;
                }
            });
        }
        catch (e) {
            console.log(e.message);
        }
    }

    function onQuickFilterChange() {
        $("#IssueListGrid").data("kendoGrid").dataSource.read();
    }

    function onQuickFilterContextMenuSelect(e) {
        switch ($(e.item).children(".k-link").text()) {
            case 'AutoFit Columns':
                resizeGridColumns("#IssueListGrid");
                break;

            case "Reset Filter":
                ResetFilter("#IssueListGrid");
                break;

            case "Reset Grid":
                ResetUserLayout("#IssueListGrid");

                $("#IssueListGrid").data('kendoGrid').setOptions(_originalQuickFilterGrid);
                $("#IssueListGrid .k-grid-toolbar").html(_originalIssueListToolBar);
                $("#IssueListGrid .k-grid-toolbar").addClass("k-grid-top");
                $('#IssueListGrid').data("kendoGrid").dataSource.read();
                break;
            case 'Unsort':
                UnsortGrid("#IssueListGrid");
                break;
        }
    }
</script>

@(
 Html.Kendo().ToolBar()
    .Name("IssueListToolBar")
    .Resizable(true)
    .Items(items =>
    {
        items.Add().Template(LabelHelper.Label("Cusip").ToHtmlString());
        items.Add().Template(Html.Kendo().TextBox().Name("LookupCusipTextBox").Value("").ToHtmlString());

        items.Add().Template(LabelHelper.Label("ISIN").ToHtmlString());
        items.Add().Template(Html.Kendo().TextBox().Name("LookupISINTextBox").Value("").ToHtmlString());

        items.Add().Template(LabelHelper.Label("Sedol").ToHtmlString());
        items.Add().Template(Html.Kendo().TextBox().Name("LookupSedolTextBox").Value("").ToHtmlString());

        items.Add().Template(LabelHelper.Label("Deescription").ToHtmlString());
        items.Add().Template(Html.Kendo().TextBox().Name("LookupDescriptionTextBox").Value("").ToHtmlString());

        items.Add().Template(LabelHelper.Label("Ticker").ToHtmlString());
        items.Add().Template(Html.Kendo().TextBox().Name("LookupTickerTextBox").Value("").ToHtmlString());
    }))

<hr class="hr-white">

<div id="QuickFilterContent" class="grid-div">
    @(
 Html.Kendo().Grid<Issue>()
        .Name("IssueListGrid")
        .Sortable()
        .HtmlAttributes(new { @class = "grid" })
        .Scrollable()
        .Filterable()
        .NoRecords()
        .ColumnMenu()
        .AutoBind(false)
        .Editable(e => e.Mode(GridEditMode.InLine).Enabled(SessionSecurityService.IsEditable(ManagerTask.EditSLRule)))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Navigatable()
        .Resizable(cols => cols.Columns(bool.Parse(DataSystemValues.LoadSystemValue("ResizeableGrid", "true"))))
        .Events(events =>
        {
            events.DataBound("onQuickFilterCheckData");
            events.Edit("onQuickFilterEdit");
            events.ColumnHide("onQuickFilterLayoutChange");
            events.ColumnShow("onQuickFilterLayoutChange");
            events.ColumnResize("onQuickFilterLayoutChange");
            events.ColumnReorder("onQuickFilterLayoutChange");
        })
        .ToolBar(toolbar => toolbar.Create())
        .Columns(columns =>
        {
            columns.Bound(x => x.IssueId).GetColumnFormat(ColumnTypeEnum.String, false, "", "").Hidden(true);
            columns.Bound(x => x.Cusip).GetColumnFormat(ColumnTypeEnum.String, false, "", "").Hidden(true);
            columns.Bound(x => x.ISIN).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.SEDOL).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Ticker).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Quick).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.CIN).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.CountryIssued).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.IssueCalcType).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.IssueMaturityType).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Maturity).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Description_1).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Description_2).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Description_3).GetColumnFormat(ColumnTypeEnum.String, false, "", "");
            columns.Bound(x => x.Description_4).GetColumnFormat(ColumnTypeEnum.String, false, "", "");

            columns.Command(x =>
            {
                x.Edit();
            });
        })
         .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("Read_QuickFilter", "QuickFilter", new { area = "DomesticTrading" }).Data("additionalQuickFilterData"))
            .Update(update => update.Action("Update_QuickFilter", "QuickFilter", new { area = "DomesticTrading" }))
            .Create(create => create.Action("Create_QuickFilter", "QuickFilter", new { area = "DomesticTrading" }).Data("additionalQuickFilterData"))
            .Destroy(destroy => destroy.Action("Delete_QuickFilter", "QuickFilter", new { area = "DomesticTrading" }))
            .Model(model =>
            {
                model.Id(x => x.IssueId);
            }))
    )
</div>

@(Html.Kendo().ContextMenu()
.Name("QuickFilterContextMenu")
    .Target("#IssueListGrid")
    .Events(events => events.Select("onQuickFilterContextMenuSelect"))
    .Items(items =>
    {
        items.Add().Text("AutoFit Columns");
        items.Add().Text("Unsort").Enabled(true);
        items.Add().Text("Reset Filter").Enabled(true);
        items.Add().Text("Reset Grid").Enabled(true);
    }))