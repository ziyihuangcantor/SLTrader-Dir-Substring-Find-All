@using BondFire.Entities.Projections
@using SLTrader.Helpers.SessionHelper
@using SLTrader.Tools


@(Html.Kendo().Notification()
    .Name("popupNotification")
    .Templates(t =>
    {
        t.Add().Type("info").ClientTemplateID("emailTemplate");
    })
)

<script id="emailTemplate" type="text/x-kendo-template">
    <div class="new-mail">
        <i class="fa fa-envelope-o fa-2x" />
        <h4>#= title #</h4>
        <h4>#= message #</h4>
    </div>
</script>
<script type="text/javascript">

    var popupNotification = $("#popupNotification").data("kendoNotification");

    $(document).ready(function () {
        try {
            traderHubProxy.on('updateClientEmail', function (update) {
                var fileTypeString = "";

                $.each(update, function (i, obj) {
                    if (obj.ClientEmailAction.FileType == '@Convert.ToInt32(SL_FileType.INVENTORY)') {
                        fileTypeString = "Inventory";
                    }
                    else if (obj.ClientEmailAction.FileType == '@Convert.ToInt32(SL_FileType.LOCATE)') {
                        fileTypeString = "Locates";
                    }
                    popupNotification.show({
                        title: obj.ClientEmail.EmailAddress + " from " + obj.ClientEmail.Source,
                        message: obj.ClientEmailAction.ItemProcessed + "  " + fileTypeString + " items processed!",
                    }, "info");
                });
            });
        }
        catch (e) { }
    });

    function onSecurityMasterChange() {

    }

    $("#SearchCriteria").keyup(function (event) {
        if (event.keyCode == 13) {
            $("#IssueButton").click();
        }
    });

    $(document).bind('keydown', 'alt+t', function (e) {
        if (e.altKey && (e.which == 84)) {
            e.preventDefault();
            onTradeTicketSubmit();
            return false;
        }
    });

    $(document).bind('keydown', 'alt+s', function (e) {
        if (e.altKey && (e.which == 83)) {
            e.preventDefault();
            onSecMasterScratchPad();
            return false;
        }
    });

    $(document).bind('keydown', 'alt+i', function (e) {
        if (e.altKey && (e.which == 73)) {
            e.preventDefault();
            onSecMasterInventoryPush();
            return false;
        }
    });

    $(document).bind('keydown', 'alt+r', function (e) {
        if (e.altKey && (e.which == 82)) {
            e.preventDefault();
            onIssueRateSubmit();
            return false;
        }
    });


    $(document).bind('keydown', 'alt+d', function (e) {
        if (e.altKey && (e.which == 68)) {
            e.preventDefault();

            try {
                $("#SharedLabelCheckBox").click();
            }
            catch (e) {

            }
     
            return false;
        }
    });

    function onSecMasterInventoryPush() {
        var entityId = $("#SecMasterDropdownList").data("kendoDropDownList").value();

        HelperHeaderPartialWindow(
            JSON.stringify({
                entityId: entityId,
            }),
            'Add Inventory',
            0,
            0,
            '/Locates/Inventory/ReadInventoryAddPartial');
    }

    function onSecMasterSubmit() {
        var securityNumber = document.getElementById("SearchCriteria").value;
        var entityId = $("#SecMasterDropdownList").data("kendoDropDownList").value();
        var effectiveDate = new Date().toJSON().slice(0, 10);

        try {
            $("#TradeTicketButton").data("kendoButton").enable(false);
            $("#HelpButton").data("kendoButton").enable(false);

            SidePanelUpdateWithMatchingResults(effectiveDate, entityId, securityNumber, securityNumber);
        }
        catch (e) {
            console.log(JSON.stringify(e));
        }

        $('#SearchCriteria').focus();
    }

    function onIssueCommentSubmit() {
        var issue = document.getElementById("SecurityMasterIssueIdTextBox").value;
        var entity = $("#SecMasterDropdownList").data("kendoDropDownList").value();

        if (issue != 0) {
            HelperPartialWindow(
                      JSON.stringify({
                          criteria: issue,
                          entityId: entity
                      }),
                      'Issue Comment',
                      480,
                      480,
                      '/DomesticTrading/Issue/LoadIssueCommentAdd'
                  );
        }
    }

    

    function onIssueRateSubmit() {
        var issue = document.getElementById("SecurityMasterIssueIdTextBox").value;
        var entity = $("#SecMasterDropdownList").data("kendoDropDownList").value();


        HelperPartialWindow(
            JSON.stringify({
                entityId: entity
            }),
            'Add Issue Rates',
            480,
            480,
            '/DomesticTrading/Issue/LoadIssueRateAdd'
        );
    }

    function onIssueHistorySubmit() {
     
        HelperPartialWindow(
            null,
            'View History',
            480,
            480,
            '/DomesticTrading/Issue/Read_IssueHistoryLookup'
        );
    }

    function onHelpClick() {
        var issue = document.getElementById("SecurityMasterIssueIdTextBox").value;
        var entity = $("#SecMasterDropdownList").data("kendoDropDownList").value();

        if (issue != 0) {
          HelperPartialWindow(
                    JSON.stringify({
                        criteria: issue,
                        entityId:entity
                    }),
                    'Issue Edit',
                    480,
                    480,
                    '/DomesticTrading/Issue/Read_IssueBundleByIssueId'
                );
        }
    }

    function onSecMasterScratchPad() {
        var layoutType = "";

        if (!$("#ScratchPadGrid").length) {
            $.ajax({
                url: '@Url.Action("GetScratchPadLayout", "Header", new { area = "Header" })',
                type: 'POST',
                dataType: "json",
                async: false,
                success: function (dataObject) {
                    layoutType = dataObject;
                },
                error: function (e) {
                    console.log(e.message);
                }
            });

            if (layoutType == '@SL_TradeLayoutType.STANDARD') {
                AddTab('~/Areas/DomesticTrading/Views/Trade/_Scratchpad.cshtml', 'Scratch Pad');
            }
            else {
                AddTab('~/Areas/DomesticTrading/Views/Trade/_ScratchpadBreakOut.cshtml', 'Scratch Pad');
            }
        }
    }

    function onTradeTicketSubmit() {
        var issueId = document.getElementById("SecurityMasterIssueIdTextBox").value;

        var entity = $("#SecMasterDropdownList").data("kendoDropDownList");

        if ((issueId != null) && (issueId != '')) {

            HelperPartialWindow(
               JSON.stringify({
                   entityId: entity.value(),
                   issueId: issueId,
               }),
               'Book Contract',
               480,
               480,
               '/DomesticTrading/Trade/LoadTradeTicket'
           );
        }
    }

    $('#SearchCriteria').on('focus', function () {
        var input = $(this);
        setTimeout(function () { input.select(); });
    });

    function ontPanelBarNavFolderExpand(e) {
        try {
            $("#TradeTicketButton").data("kendoButton").enable(false);
            $("#HelpButton").data("kendoButton").enable(false);

            var securityNumber = document.getElementById("SearchCriteria").value;
            var entityId = $("#SecMasterDropdownList").data("kendoDropDownList").value();
            var effectiveDate = new Date().toJSON().slice(0, 10);

            SidePanelUpdate(effectiveDate, entityId, securityNumber, securityNumber);
        }
        catch (e) {
            console.log(JSON.stringify(e));
        }
    }
    function onIssueColorHot() {

    }

    function onIssueColorWarm() {

    }
    function onIssueColorGeneral() {

    }
</script>

<div id="panelbarDiv" style="padding-top:0px;margin-top:0px;width:100%;">
<table class="lookupPanel" style="width:100%">
<tr>        
<td>
@LabelHelper.Label("Security")
</td>
<td style="padding:2px;">
@Html.Kendo().TextBox().Name("SearchCriteria").HtmlAttributes(new { @style = "width:110px;" })
</td>
<td style="padding:2px;">
@Html.Kendo().Button().Name("IssueButton").HtmlAttributes(new { @title = "Lookup Issue" }).Events(e => e.Click("onSecMasterSubmit")).Content(@<text><i class="fa fa-search"></i></text>)
</td>  
</tr>
<tr>
<td>      
@LabelHelper.Label("Entity", "SecMasterDropdownList", "")
</td>
<td style="padding:2px;">
@(Html.Kendo().DropDownList()
.Name("SecMasterDropdownList")
.HtmlAttributes(new { @class="Toolbar-Cell", @style = "width:110px;" })
.DataTextField("Custodian")
.DataValueField("CompanyId")
.OptionLabel(LabelHelper.Text("OptionLabel"))
.AutoBind(true)
.AutoWidth(true)
.Template("#if(data.Custodian == \"" + LabelHelper.Text("OptionLabel") + "\")" +
"{#<span class=\"k-state-default\">#:data.Custodian#</span>#}" +
"else {# <span class=\"k-state-default\">#:data.Custodian# #:data.Name#</span> #}#")
    .Events(events => events.Change("onSecurityMasterChange"))
.SelectedIndex(1)
.DataSource(dataSource => dataSource
.Read(read => read
.Action("Read_EntityDropdown", "ContraEntity", new { Area="DomesticTrading"}))))
</td>
</tr>
</table>
 <hr class="hr-white">
<table style="width:100%">
 <tr class="k-alt">
     <td align="center" width="100%;" colspan="3">         
         <span>          
             @Html.Kendo().Button().Name("HelpButton").Events(e => e.Click("onHelpClick")).HtmlAttributes(new { @title = "Edit Issue" }).Enable(false).Content(@<text><i class="fa fa-pencil"></i></text>)
             @Html.Kendo().Button().Name("TradeTicketButton").Events(e => e.Click("onTradeTicketSubmit")).HtmlAttributes(new { @title = "New Trade (Alt-T)" }).Enable(false).Content(@<text><i class="fa fa-ticket"></i></text>)
             @Html.Kendo().Button().Name("IssueCommentButton").Events(e => e.Click("onIssueCommentSubmit")).HtmlAttributes(new { @title = "Add Issue Comment" }).Enable(false).Content(@<text><i class='fa fa-plus-square'></i></text>)
             @Html.Kendo().Button().Name("IssueRateButton").Events(e => e.Click("onIssueRateSubmit")).HtmlAttributes(new { @title = "Add Issue Rates (Alt-R)" }).Enable(true).Content(@<text><i class='fa fa-heartbeat'></i></text>)
             @Html.Kendo().Button().Name("IssueHistoryButton").Events(e => e.Click("onIssueHistorySubmit")).HtmlAttributes(new { @title = "View Issue History" }).Enable(true).Content(@<text><i class='fa fa-history'></i></text>)
         </span>
     </td>
</tr>
 <tr class="k-alt">
        <td align="center" colspan="4">
                @(Html.Kendo().ToolBar()
    .Name("SecurityTempatureToolBar")
    .Items(items =>
    {
        items.Add().Type(CommandType.ButtonGroup).Buttons(buttons =>
        {
            buttons.Add().SpriteCssClass("fa fa-thermometer-empty").Id("GeneralCollateralButton").Group("Tempature").Text(IssueColorType.GC.ToString()).Click("onIssueColorGeneral");
            buttons.Add().SpriteCssClass("fa fa-thermometer-quarter").Id("WarmCollateralButton").Group("Tempature").Text(IssueColorType.WARM.ToString()).Click("onIssueColorWarm");
            buttons.Add().SpriteCssClass("fa fa-thermometer-full").Id("HotCollateralButton").Group("Tempature").Text(IssueColorType.HOT.ToString()).Click("onIssueColorHot");
        });
    }))            
        </td>
    </tr>
</table>
@(Html.Kendo().PanelBar()
        .Name("tPanelBarNavFolder")
        .ExpandMode(PanelBarExpandMode.Multiple)
        .HtmlAttributes(new { style = "width:100%" })
        .Animation(animation => animation.Expand(e => e.Expand(ExpandDirection.Vertical)))
        .Events(events => events.Expand("ontPanelBarNavFolderExpand"))
        .Items(panelbar =>
        {
            panelbar.Add().Text("Security Information")
                .HtmlAttributes(new { ID = "SidePanelSecurityInformation" })
                .Expanded(true)
                .Content( @<text> @Html.Partial( "~/Areas/DomesticTrading/Views/Issue/index.cshtml", new SecurityPanelModel() )</text> );
            
            if (SessionSecurityService.IsEditable(ManagerTask.ViewSLBox) == true)
            {                
            panelbar.Add().Text("Box Calculation")
                .HtmlAttributes( new { ID = "SidePanelBoxCalculation" } )
                .Expanded(false)
                .Content(@<text> @Html.Partial("~/Areas/DomesticTrading/Views/BoxCalculation/_BoxCalculation.cshtml", new SL_BoxCalculationExtendedProjection()) </text>);
            }

            if (SessionSecurityService.IsEditable(ManagerTask.ViewSLContract) == true)
            {
            panelbar.Add().Text("Trading")
                .HtmlAttributes( new { ID = "SidePanelTrading" } )
                .Expanded(false)
                .Content(@<text> @Html.Partial("~/Areas/DomesticTrading/Views/Trade/_SecurityTrading.cshtml", new List<SecurityTradingModel>()) </text>);
            }

            if (SessionSecurityService.IsEditable(ManagerTask.ViewSLInventory) == true)
            {
                panelbar.Add().Text("Inventory")
                    .HtmlAttributes( new { ID = "SidePanelInventory" } )
                    .Expanded(false)
                    .Content(@<text> @Html.Partial("~/Areas/Locates/Views/Inventory/_InventorySnapshot.cshtml") </text>);
            }

            if (SessionSecurityService.IsEditable(ManagerTask.ViewSLInventory) == true)
            {
                panelbar.Add().Text("Client Need")
                     .HtmlAttributes( new { ID = "SidePanelClientNeed" } )
                    .Expanded(true)        
                    .Content(@<text> @Html.Partial("~/Areas/DomesticTrading/Views/ClientNeed/_ClientNeedNotification.cshtml") </text>);
            }
        }))
</div>


<style scoped>
    #SecurityBlock {
        height:100%;
        width:100%;
        padding:0px;
        border-spacing:1px;
   }

    #panelbarDiv {
        height:100%;        
        width:100%;
        padding-top:0px;
        padding:0px;
        margin: 0px;
        border-spacing:1px;
    }

    #lookupPanel {
        margin: 0px;
        padding: 0px;
        border-spacing:1px;
    }

    #SecurityTempatureToolBar {
        align-items:center;  
        margin:0px;
        padding:0px;
        border:0px;
    }
</style>