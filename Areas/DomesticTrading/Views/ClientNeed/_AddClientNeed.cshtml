@using BondFire.Entities.Projections
@using SLTrader.Enums
@using SLTrader.Helpers.SessionHelper
@using SLTrader.Tools

@model string

<script>
    function onAddClientNeedClientData() {
        var entity = '@Model';

        return {
            entityId:entity,
        }
    }

    function onAddClientNeedListSubmit() {
        var items = document.getElementById('AddClientNeedListTextBox').value;
        var emailAddress = document.getElementById('AddClientNeedEmailAddressTextBox').value;
        var clientComment = document.getElementById('AddClientNeedClientCommentTextBox').value;

        $('#AddClientNeedListStatusLabel').html('<i class="fa fa-spinner fa-spin"></i> Processing...');

        if ((emailAddress != null) && (clientId != '') &&
            (subject != null) && (subject != '')) {
            $.ajax({
                url: '/DomesticTrading/ClientNeed/UploadAddClientNeedList',
                data: JSON.stringify({
                    entityId: '@Model',                    
                    emailAddress: tradeXref,
                    subject: subject,
                    needList: items,
                }),
                contentType: 'application/json;',
                type: "POST",
                success: function (e) {
                    $('#AddClientNeedListStatusLabel').html('');
                    $("#AddClientNeedListStatusLabel").text(e.Message);

                    var bodyText = "";
                    var errorCount = 0;

                    $.each(e.RejectedItems, function (i, obj) {
                        bodyText += obj.SecurityNumber + " " + obj.Quantity + "\r\n";
                        errorCount++;
                    });

                    if (errorCount > 0) {
                        $("#AddClientNeedListStatusLabel").text(e.Message + ". Please review unprocessed items above.");
                    }


                    if (errorCount == 0) {
                        $('#LocalDetailWindow').data("kendoWindow").close();
                    }

                    $('#AddClientNeedListButton').data("kendoButton").enable(true);
                    $("#AddClientNeedListTextBox").val(bodyText);
                },
                error: function (e) {
                    $('#AddClientNeedListStatusLabel').html('<i class="fa fa-times"></i> Error Processing - invalid format!');
                }
            });
        }
        else {
            $("#AddClientNeedListStatusLabel").text("Please select a client id.");
        }
    }
</script>


<style scoped>
    #AddClientNeedListTable {
        border-collapse: collapse;
        margin: 0px;
    }

        #AddClientNeedListTable th,
        #AddClientNeedListTable td {
            min-height: 50px;
            padding: 5px 0px 0px 5px;
        }


    #AddClientNeedListStatusLabel {
        max-width: 100%;
        width: 100%;
        font-style: normal;
        white-space: pre-wrap;
        border: 1px solid #ccc;
        height: 50px;
    }
</style>


<table id="AddClientNeedListTable" class="width400">
    <tr>
        <td>
            @LabelHelper.Label("AddClientNeedClientId")
            @(Html.Kendo().DropDownList()
                          .Name("AddClientNeedClientsDropdownList")
                          .HtmlAttributes(new { @class = "Toolbar-Cell" })
                          .Animation(true)
                          .DataTextField("Client")
                          .DataValueField("Client")
                          .OptionLabel(LabelHelper.Text("OptionLabel"))
                          .AutoBind(true)
                          .DataSource(dataSource => dataSource
                              .Read(read => read
                                  .Action("LoadAddClientNeedClientDropdown", "AddClientNeeds", new { area = "AddClientNeeds" }).Data("onAddClientNeedClientData")))
                          .SelectedIndex(1))
        </td>
        <td>
            @LabelHelper.Label("EmailAddress")
            @Html.TextBox("AddClientNeedEmailAddress", (string.IsNullOrWhiteSpace(SessionService.User.EMail) ? "" : SessionService.User.EMail.ToString()), new { @class = "k-textbox width100p" })
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @LabelHelper.Label("ClientComment")
            @Html.TextBox("AddClientNeedClientCommentTextBox", "", new { @class = "k-textbox width100p" })
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.TextArea("AddClientNeedListTextBox", new { @class= "height300 width400" })
        </td>
    </tr>
    <tr>
        <td colspan="2">@LabelHelper.Label("Status")</td>
    </tr>
    <tr>
        <td colspan="2">
            <label id="AddClientNeedListStatusLabel"></label>
        </td>
    </tr>
    <tr>
        <td align="right" colspan="2">
            @Html.Kendo().Button().Name("AddClientNeedListButton").Content(LabelHelper.Text("AddClientNeedListSubmit")).Events(e => e.Click("onAddClientNeedListSubmit"))
        </td>
    </tr>
</table>
