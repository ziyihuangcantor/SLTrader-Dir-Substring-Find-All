@using SLTrader.Tools
@model string


<script>
    function onInventoryListSubmit() {
        var source = document.getElementById('InventoryListSubmitDropdownList').value;
        var items = document.getElementById('InventoryListTextBox').value;
       
        $('#InventoryStatusLabel').html('<i class="fa fa-spinner fa-spin"></i> Processing...');
        $('#InventoryListButton').data("kendoButton").enable(false);
       
        if (source != '') {
            $.ajax({
                url: '/Locates/Locates/UploadInventoryList',
                data: JSON.stringify({
                    entityId: '@Model',
                    source: source,
                    inventoryList: items,
                }),
                contentType: 'application/json;',
                type: "POST",
                success: function (e) {
                    $('#InventoryStatusLabel').html('');
                    $("#InventoryStatusLabel").text(e.Message);

                    var bodyText = "";
                    var errorCount = 0;

                    $.each(e.RejectedItems, function (i, obj) {
                        bodyText += obj.SecurityNumber + " " + obj.Quantity + "\r\n";
                        errorCount++;
                    });

                    if (errorCount > 0)
                    {
                        $("#InventoryStatusLabel").text(e.Message + ". Please review unprocessed items above.");
                    }
                    else
                    {
                        $('#LocalDetailWindow').data("kendoWindow").close();
                    }

                    $('#InventoryListButton').data("kendoButton").enable(true);               
                    $("#InventoryListTextBox").val(bodyText);
                },
                error: function (e) {
                    $('#InventoryStatusLabel').html('<i class="fa fa-times"></i> Error Processing - invalid format!');
                    $('#InventoryListButton').data("kendoButton").enable(true);
                }
            });
        }
        else {
            $("#InventoryStatusLabel").text("Please enter a source.");
            $('#InventoryListButton').data("kendoButton").enable(true);        
        }
    }

    function additionalInventoryData() {
        return {
            entityId : '@Model'
        }
    }
</script>

@*<style scoped>
  
    #InventoryTable {
        border-collapse:collapse;
        width:100%;
    }

        #InventoryTable th,
        #InventoryTable td {
            min-height: 50px;
            padding: 5px 0px 0px 5px;
        }

    #InventoryTableWrapper {
        width: 100%;
        min-width: 300px;
    }

    #InventoryStatusLabel {
        max-width: 300px;
        width: 300px;
        font-style: normal;
        white-space: pre-wrap;
        border: 1px solid #ccc;
        height: 50px;
    }
</style>*@

<div id="InventoryTableWrapper">
    <table id="InventoryTable">
        <tr>
            <td>
                @LabelHelper.Label("InventorySource")
                @(Html.Kendo().AutoComplete()
        .Name("InventoryListSubmitDropdownList")
        .HtmlAttributes(new { @class = "width120" })
        .Enable(true)
        .DataSource(ds =>
        {
            ds.Read(read => read.Action("Read_InventorySourceDropdown", "Inventory", new { area = "Locates" }).Data("additionalInventoryData"));
        }))
            </td>
        </tr>
        <tr>
            <td>
                @Html.TextArea("InventoryListTextBox", new { style = "height:300px;width:100%;", @class = "k-textbox" })
            </td>
        </tr>
        <tr>
            <td colspan="2">@LabelHelper.Label("Status")</td>
        </tr>
        <tr>
            <td>
                <label id="InventoryStatusLabel"></label>
            </td>
        </tr>
        <tr>
            <td align="right">
                @Html.Kendo().Button().Name("InventoryListButton").Content(LabelHelper.Text("InventoryListSubmit")).Events(e => e.Click("onInventoryListSubmit"))
            </td>
        </tr>
    </table>
</div>