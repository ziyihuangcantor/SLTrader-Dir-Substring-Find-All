@using BondFire.Entities.Projections
@using SLTrader.Tools
@using SLTrader.Enums
@using SLTrader.Helpers.SessionHelper

@model SL_InventorySummaryFileProjection

<script type="text/javascript">
    function onClientEmailActionMarkerDropDownData(e) {
        return {
            entityId: '@Model.EntityId'
        }
    }

    function onCancelClientEmailActionMarker() {
        $('#LocalDetailWindow').data("kendoWindow").close();
    }

    function onSendClientEmailActionMarker() {
        var markerValue = $("#ClientEmailActionMarkerPartialDropDown").data("kendoDropDownList").value();

        $("#SendClientEmailActionMarkerButton").data("kendoButton").enable(false);
        $("#CancelClientEmailActionMarkerButton").data("kendoButton").enable(false);

        if ($("#ClientEmailActionMarkerCheckBox").is(':checked')) {
            markerValue = -1;
        }

         $.ajax({
                url: "@Url.Action("UpdateClientEmailActionMarker", "ClientEmailActionMarker", new { area = "Locates" })",
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({
                    clientEmailActionId: '@Model.SLClientEmailActionId',
                    clientEmailActionMarkerId: markerValue
                }),
                success: function (e) {
                    $("#ClientInventoryGrid").data("kendoGrid").dataSource.read();                    
                    $('#LocalDetailWindow').data("kendoWindow").close();
                },
                error: function (valid) {
                    $("#ClientEmailActionMarkerStatusLabel").text(valid.message);                    

                    $("#SendClientEmailActionMarkerButton").data("kendoButton").enable(true);
                    $("#CancelClientEmailActionMarkerButton").data("kendoButton").enable(true);
                }
            });
    }

    function GetDropdownLength() {
        var dropDown = $("#ClientEmailActionMarkerPartialDropDown").data("kendoDropDownList");
        var len = dropDown.dataSource.data().length;

        if (len == 0)
        {
            $("#SendClientEmailActionMarkerButton").data("kendoButton").enable(false);
            $("#CancelClientEmailActionMarkerButton").data("kendoButton").enable(true);

            $("#ClientEmailActionMarkerStatusLabel").text("Zero markers are programmed, please program markers first.");      
        }
    }

    function onClientEmailActionMarkerCheckBoxChange() {
        if ($("#ClientEmailActionMarkerCheckBox").is(':checked')) {
            $("#ClientEmailActionMarkerPartialDropDown").data("kendoDropDownList").enable(false);
        }
        else
        {
            $("#ClientEmailActionMarkerPartialDropDown").data("kendoDropDownList").enable(true);
        }
    }
</script>

@*<style scoped>
    #ClientEmailActionMarkerTable td,
    #ClientEmailActionMarkerTable th {
        min-height: 50px;
        padding: 5px 0px 0px 5px;
    }


    #ClientEmailActionMarkerStatusLabel {
        font-style: normal;
        white-space: pre-wrap;
        border: 1px solid #ccc;
        height: 50px;
    }

    #ClientEmailActionMarkerTable {
        width:300px;
        max-width:300px;
    }
</style>*@

@if (Model == null)
{
    @LabelHelper.Label("NoData")
}
else
{
<table id="ClientEmailActionMarkerTable">
    <tr>
        <td>
            @LabelHelper.Label("Source")
        </td>
        <td>
            @Html.Kendo().TextBoxFor(x => x.Source).HtmlAttributes(new { @readonly = "readonly", style = "width:100%;" })    
        </td>
    </tr>
    <tr>
        <td>
            @LabelHelper.Label("Description")
        </td>
        <td>
            @Html.Kendo().TextBoxFor(x => x.FileDescription).HtmlAttributes(new { @readonly = "readonly", style = "width:100%;" })    
        </td>
    </tr>
    <tr>
        <td>
            @LabelHelper.Label("CurrentColor")
        </td>
        <td>
            @if (Model.CLientEmailActionMarker == null)
            {
                @LabelHelper.Text("No Marker Selected")
            }
            else
            {
                <i class="fa fa-square" style="color:'+ @Model.CLientEmailActionMarker +'"> @Model.CLientEmailActionMarker</i>
            }
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.Kendo().TextBoxFor(x => x.CLientEmailActionMarker).HtmlAttributes(new { @readonly = "readonly", style = "width:100%;" })    


        </td>
    </tr>
    <tr>
        <td>
            @LabelHelper.Label("NewColor")
        </td>
        <td>
            @(Html.Kendo().DropDownList()
                .Name("ClientEmailActionMarkerPartialDropDown")
                .Enable(true)
                .DataValueField("SLClientEmailActionMarker")
                .HtmlAttributes(new {style = "width:100%;" })
                .DataTextField("Description")
                .Events(ev => ev.DataBound("GetDropdownLength"))
                .Template("<span class=\"k-state-default\"><i class='fa fa-square' style='color:#:data.Marker#'></i> #:data.Description#</span>")
                .ValueTemplate("<span class=\"k-state-default\"><i class='fa fa-square' style='color:#:data.Marker#'></i> #:data.Description#</span>")                
                .DataSource(dataSource => dataSource
                .Read(read => read
                .Action("Read_ClientEmailActionMarkerDropDown", "ClientEmailActionMarker", new { area = "Locates" }).Data("onClientEmailActionMarkerDropDownData")))
                .SelectedIndex(0))                
        </td>
    </tr>
    <tr>
        <td>
            @LabelHelper.Label("ResetMarker")
        </td>
        <td>
            @(Html.Kendo().CheckBox().Name("ClientEmailActionMarkerCheckBox").Checked(false).Enable(true).HtmlAttributes(new { id = "ClientEmailActionMarkerCheckBox", onclick = "onClientEmailActionMarkerCheckBoxChange()" }))
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.Kendo().TextBoxFor(x => x.CLientEmailActionMarker).HtmlAttributes(new { @readonly = "readonly", style = "width:100%;" })     
        </td>
    </tr>
    <tr>
        <td colspan="2">@LabelHelper.Label("Status")</td>
    </tr>
    <tr>
        <td colspan="2">
            <label id="ClientEmailActionMarkerStatusLabel"></label>
        </td>
    </tr>
    <tr>
        <td colspan="2" align="right">
            @Html.Kendo().Button().Name("SendClientEmailActionMarkerButton").Content(LabelHelper.Text("SendClientEmailActionMarker")).Events(e => e.Click("onSendClientEmailActionMarker"))
            @Html.Kendo().Button().Name("CancelClientEmailActionMarkerButton").Content(LabelHelper.Text("CancelClientEmailActionMarker")).Events(e => e.Click("onCancelClientEmailActionMarker"))
        </td>
    </tr>
</table>
}
