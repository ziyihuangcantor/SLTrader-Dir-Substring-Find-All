@using System.ComponentModel
@using SLTrader.Helpers.SessionHelper
@using SLTrader.Enums
@using SLTrader.Tools
@using SLTrader.Models
@using BondFire.Entities
@using System.Globalization
@using SLTrader.Helpers.SessionHelper

@model SL_Application?

<script>
    function onHeaderScratchPad() {
        var layoutType = "";

        $.ajax({
            url: '@Url.Action("GetScratchPadLayout", "Header", new { area = "Header" })',
            type: 'POST',
            dataType: "json",
            async: false,
            success: function (dataObject) {
                layoutType = dataObject;
            },
            error: function (e) {
                console.log(e.message);
            }
        });

        if (layoutType == '@SL_TradeLayoutType.STANDARD')
        {
            AddTab('~/Areas/DomesticTrading/Views/Trade/_Scratchpad.cshtml', 'Scratch Pad');
        }
        else
        {
            AddTab('~/Areas/DomesticTrading/Views/Trade/_ScratchpadBreakOut.cshtml', 'Scratch Pad');
        }
    }

    function onHeaderInventoryPush() {
        var entityId = $("#SecMasterDropdownList").data("kendoDropDownList").value();

        HelperHeaderPartialWindow(
            JSON.stringify({
                entityId: entityId,
            }),
           'Add Inventory',
            0,
            0,
            '/Locates/Inventory/ReadInventoryAddPartial');
    }

    function onHeaderActivity() {

        HelperHeaderPartialWindow(
            null,
           'Activity',
            0,
            0,
            '/DomesticTrading/Activity/GetActivityPartial');
    }

    function onSharedDetailChange() {
        var securityNumber = document.getElementById('SearchCriteria').value;

        var entity = $("#SecMasterDropdownList").data("kendoDropDownList");

        SidePanelUpdate(null, entity.value(), securityNumber, securityNumber);
    }

    $('#SharedLabelCheckBox').change(function () {
        var dropdownlist = $("#DetailTypeDropdown").data("kendoDropDownList");

        if ($("#SharedLabelCheckBox").is(':checked')) {
            dropdownlist.enable();
        }
        else {
            dropdownlist.enable(false);
        }

        $("#MainSplitterChild").data("kendoSplitter").toggle('#SharedDetailSplit');
        resizeTabs("#MainTabStrip", 40);
    });


    function onSharedLabelClick() {
        var dropdownlist = $("#DetailTypeDropdown").data("kendoDropDownList");

        if ($("#SharedLabelCheckBox").is(':checked')) {
            dropdownlist.enable();
        }
        else {
            dropdownlist.enable(false);
        }

        $("#MainSplitterChild").data("kendoSplitter").toggle('#SharedDetailSplit');
        resizeTabs("#MainTabStrip", 40);
    }

    function onSignout() {
        $.ajax({
            url: '@Url.Action("ClearUser", "Header", new { area = "Header" })',
            type: 'POST',
            dataType: "json",
            async: false,
            success: function (dataObject) {
                window.location.href = '@Url.Action("Index", "Login", new { area = "Login" })';
            },
            error: function (e) {
                console.log(e.message);
            }
        });
    }

    $(document).ready(function () {
        $.ajax({
            url: "@Url.Action("LoadUser", "Login", new { area = "Login" })",
            type: 'POST',
            dataType: "json",
            async: false,
            success: function (dataObject) {
                try {
                    if (dataObject.UserName != "") {

                        if ('@SessionService.UserPreference.Customcss' != "") {
                            changeTheme('@SessionService.UserPreference.Customcss');
                        }

                        if ('@SessionService.UserPreference.FontSize' > 0) {
                            changeFontSize('@SessionService.UserPreference.FontSize');
                        }

                        if ('@SessionService.UserPreference.FontFamily' != "") {
                            changeFontFamily('@SessionService.UserPreference.FontFamily');
                        }
                    }
                    else {
                        alert(JSON.stringify(dataObject));
                    }
                }
                catch (e) {
                    console.log(e.message);
                }
            },
            error: function (e) {
                console.log(e.message);
            }
        });
    });

    function changeFontSize(e) {
        $("#DefaultFontSizeNumericTextBox").trigger("change");
        $("#ContentArea").css({ 'font-size': e + 'px' });
        $(".k-grid-content td").css({ 'height': e + 1 + 'px' });
    }

    function changeFontFamily(e) {
        $("#ContentArea").css({ 'font-family': '"' + e + '"' });
        jQuery.event.trigger('styleChange');
    }

    function onLocalHeaderWindowResize() {
        var wnd = $("#LocalHeaderDetailWindow").data("kendoWindow");

        wnd.center();
    }

    function disableHeaderButton(toolBar, buttonName, isDisabled) {

        var toolbar = $(toolBar).data("kendoToolBar"),
            tempButton = $(buttonName);

        toolbar.enable(tempButton, isDisabled);
    }


    function onApplicationChange(e) {
        var appName = $("#HeaderApplicationDropdown").data("kendoDropDownList");

        appName.enable(false);
        onHeaderChangeWindowOpen(appName.text());

        try {
            $.ajax({
                url: '@Url.Action("LoadApplication", "Header", new { area = "Header" })',
                type: 'POST',
                contentType: 'application/json;',
                data: JSON.stringify({
                    application: appName.value()
                }),
                success: function (valid) {
                    try
                    {
                        $.connection.hub.stop();
                    }catch(e)
                    {

                    }

                    $("#ContentArea").html(valid);

                    if (appName.value() == null) {
                        disableHeaderButton("#HeaderToolBar", "#ScratchpadButton", false);
                        disableHeaderButton("#HeaderToolBar", "#InventoryPushButton", false);
                    }
                    else if (appName.value() == '@Convert.ToInt32(SL_Application.DomesticTrading)') {
                        disableHeaderButton("#HeaderToolBar", "#ScratchpadButton", '@SessionSecurityService.IsEditable(ManagerTask.EditSLTRade)');
                        disableHeaderButton("#HeaderToolBar", "#InventoryPushButton", '@SessionSecurityService.IsEditable(ManagerTask.EditSLInventory)');
                    }
                    else if (appName.value() == '@Convert.ToInt32(SL_Application.Locates)') {
                        disableHeaderButton("#HeaderToolBar", "#ScratchpadButton", false);
                        disableHeaderButton("#HeaderToolBar", "#InventoryPushButton", '@SessionSecurityService.IsEditable(ManagerTask.EditSLInventory)');
                    } else {
                        disableHeaderButton("#HeaderToolBar", "#ScratchpadButton", false);
                        disableHeaderButton("#HeaderToolBar", "#InventoryPushButton", false);
                    }

                    appName.enable(true);
                    onHeaderChangeWindowClose();
                },
                error: function (valid) {
                    appName.enable(true);
                    onHeaderChangeWindowClose();
                }
            });
        } catch (e) {
            console.log(e.message);
        }
    }


    function onHeaderChangeWindowOpen(appName) {
        var wnd = $("#HeaderChangeWindow").data("kendoWindow");

        wnd.setOptions({
            title: 'Processing',
            modal: true
        });

        wnd.content("<span style='align:center;'><label>Changing to module " + appName + "</label><br/><span><div id='LoadingDiv' style='width:200px;height:150px;'></div>");
        kendo.ui.progress($("#LoadingDiv"), true);

        wnd.open();
        wnd.center();
    }


    function onHeaderChangeWindowClose() {
        var wnd = $("#HeaderChangeWindow").data("kendoWindow");

        wnd.close();
    }

    function changeTheme(skinName, animate) {
        var doc = document,
            kendoLinks = $("link[href*='kendo.']", doc.getElementsByTagName("head")[0]),
            commonLink = kendoLinks.filter("[href*='kendo.common']"),
            skinLink = kendoLinks.filter(":not([href*='kendo.common'])"),
            href = location.href,
            skinRegex = /kendo\.\w+(\.min)?\.css/i,
            extension = skinLink.attr("rel") === "stylesheet" ? ".css" : ".less",
            url = commonLink.attr("href").replace(skinRegex, "kendo." + skinName + "$1" + extension),
            exampleElement = $("#example");

        function preloadStylesheet(file, callback) {
            var element = $("<link rel='stylesheet' media='print' href='" + file + "'/>").appendTo("head");

            setTimeout(function () {
                callback();
                element.remove();
            }, 100);
        }

        function replaceTheme() {
            var oldSkinName = $(doc).data("kendoSkin"),
                newLink;


            newLink = skinLink.eq(0).clone().attr("href", url);

            newLink.insertBefore(skinLink[0]);
            skinLink.remove();

            $(doc.documentElement).removeClass("k-" + oldSkinName).addClass("k-" + skinName);
        }

        if (animate) {
            preloadStylesheet(url, replaceTheme);
        } else {
            replaceTheme();
        }
    };

    function ThemeBuilderChange(e) {
        var theme = (this.value() || "default").toLowerCase();

        changeTheme(theme, true);
    }

    function onAccountInfoButton(e) {
        HelperHeaderPartialWindow(
                  JSON.stringify({
                      url: '~/Areas/Header/Views/Header/_UserPreferences.cshtml',
                  }),
                 'Account Info',
                  0,
                  0,
                  '/Header/Header/PartialViewContent');
    }

    function onHeaderSystemValues(e) {
        HelperHeaderPartialWindow(
            JSON.stringify({
                url: '~/Areas/Header/Views/Header/_SystemValues.cshtml',
            }),
            'System Values',
            0,
            0,
            '/Header/Header/PartialViewContent');
    }

    function onPasswordChangeButton(e) {
        var userId = '@SessionService.User.UserId';

        HelperHeaderPartialWindow(
            JSON.stringify({ userId: userId }),
            "Change password",
            525,
            325,
            "/Header/Header/UpdateUserPasswordByUserIdPartial");
    }
</script>
<style scoped>
    #HeaderToolBar .k-checkbox-label {
        top: -8px;
    }

    .floatRight {
        float: right;
    }

    #UserName,
    #VersionLabel {
        margin-top: 4px;
    }

    #SharedDetailTable {
        border-collapse: separate;
        align-items: center;
    }

        #SharedDetailTable tr, td {
            border-collapse: separate;
            align-items: center;
        }
</style>
<div id="HeaderBar">
    @(Html.Kendo().ToolBar()
    .Name("HeaderToolBar")
    .Items(items =>
    {
        items.Add().Type(CommandType.ButtonGroup).Buttons(buttons =>
        {
            buttons.Add().SpriteCssClass("fa fa-pencil").Id("ScratchpadButton").Text(LabelHelper.Text("Scratchpad")).HtmlAttributes(new { title = LabelHelper.Text("Scratchpad") + " (Alt-S)" }).Click("onHeaderScratchPad").Enable(SessionSecurityService.IsEditable(ManagerTask.EditSLTRade));
            buttons.Add().SpriteCssClass("fa fa-plus").Id("InventoryPushButton").Text(LabelHelper.Text("InventoryPush")).HtmlAttributes(new { title = LabelHelper.Text("InventoryPush") + " (Alt-I)" }).Click("onHeaderInventoryPush").Enable(SessionSecurityService.IsEditable(ManagerTask.EditSLInventory));
        });

        items.Add().Template( "<div class='k-block' id='RealTimeDiv' ><span id='RealTimeStatus' style='padding:3px'>Not Connected</span></div>" );

        items.Add().Type(CommandType.ButtonGroup).HtmlAttributes(new { @class = "floatRight" }).Buttons(buttons =>
        {
            buttons.Add().SpriteCssClass("fa fa-commenting-o").HtmlAttributes(new { title = "Activity" }).Click("onHeaderActivity");

            if (SessionSecurityService.IsEditable(ManagerTask.ViewSLAdminApp))
            {
                buttons.Add().SpriteCssClass("fa fa-cogs").HtmlAttributes(new { title = "System Values" }).Click("onHeaderSystemValues");
            }

            buttons.Add().SpriteCssClass("fa fa-key").HtmlAttributes(new { title = "Change Password" }).Click("onPasswordChangeButton");
            buttons.Add().SpriteCssClass("fa fa-info-circle").HtmlAttributes(new { title = "Account Info" }).Click("onAccountInfoButton");
            buttons.Add().SpriteCssClass("fa fa-sign-out").HtmlAttributes(new { title = "Sign Out" }).Click("onSignout");
        });


        items.Add().Template("<label ID='SessionTimeOutLabel'></label>");

        items.Add().Template("<label ID='VersionLabel'> Version  3.0.0.0 </label>").HtmlAttributes(new { @class = "floatRight"});

        items.Add().Template("<label ID='UserName'>" + "Logged In " + SessionService.User.FirstName.Trim() + " " + SessionService.User.LastName.Trim() + " </label>").HtmlAttributes(new { @class = "floatRight"});

        items.Add().Template(Html.Kendo().DropDownListFor(m => m)
          .Name("HeaderApplicationDropdown")
          .DataValueField("Value")
          .DataTextField("Text")
          .BindTo(SessionSecurityService.LoadApplications())
          .Value(EnumExtensions.GetEnumSelectListItem(Model).Value.ToString(CultureInfo.InvariantCulture))
          .Events(events => events.Change("onApplicationChange")).ToHtmlString()).HtmlAttributes(new { @class = "floatRight" });


        items.Add().Template(Html.Kendo().DropDownList()
                       .Name("DetailTypeDropdown")
                       .Enable(false)
                       .BindTo(Enum.GetNames(typeof(SharedDetail)).ToList())
                       .Events(events => events.Change("onSharedDetailChange"))
                       .Value(SharedDetail.StockRecord.ToString()).ToHtmlString()).HtmlAttributes(new { @class = "floatRight" });

        items.Add().Template("<table id='SharedDetailTable'><tr><td>" + LabelHelper.Label("SharedDetail", "SharedLabelCheckBox", "").ToString() + "</td><td>" + Html.Kendo().CheckBox().Name("SharedLabelCheckBox").Label("").Checked(false).HtmlAttributes(new { onclick = "onSharedLabelClick()" }).ToString() + "</td></tr></table>").HtmlAttributes(new { @class = "floatRight" });        
    }));
</div>

@(Html.Kendo().Window()
        .Name("LocalHeaderDetailWindow")                       
        .Modal(true)
        .AutoFocus(true)
        .Visible(false)
        .Animation(true)       
        .Resizable(resize => resize.Enabled(false))
        .Draggable(true)        
        .Events(events => events.Refresh("onLocalHeaderWindowResize"))
        .Scrollable(false)
        .Title("Details"))


@Html.Kendo().Window().Name("HeaderChangeWindow").Visible(false)
