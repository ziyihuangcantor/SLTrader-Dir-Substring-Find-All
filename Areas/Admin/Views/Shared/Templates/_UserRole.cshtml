@using SLTrader.Tools
@using SLTrader.Helpers.SessionHelper;

@model int

<script type="text/javascript"> 
    function onAdditionalUserRole() {

        return {
            userId:'@Model',
        }
    }

    function onAvailableRolesByUserId() {
        return {
            userId: '@Model',
        }
    }

    function onUserRoleRemove() {
        var entityGrid = $("#UserRoleTypesGrid").data("kendoGrid");
        var selectedItem = entityGrid.dataItem(entityGrid.select());

        var userId = '@Model';
        var userRoleTypeId = selectedItem["UserRoleTypeId"];


        $.ajax({
            url: '/Admin/Admin/RemoveRoleFromUser',
            data: JSON.stringify({ userId: userId, roleId: userRoleTypeId }),
            contentType: 'application/json;',
            type: "POST",
            success: function () {
                $("#UserRoleStatusLabel").text("Role Removed");
            },
            error: function () {
                $("#UserRoleStatusLabel").text("Role Remove Failed");
            }
        });

        $('#UserRoleTypesGrid').data('kendoGrid').dataSource.read();
    }

    function onUserRoleAdd() {
        var entity = $("#AvailableRoleDropdown").data("kendoDropDownList").value();
        var userId = '@Model';

        $.ajax({
            url: '/Admin/Admin/AddRoleToUser',
            data: JSON.stringify({ userId: userId, roleId: entity }),
            contentType: 'application/json;',
            type: "POST",
            success: function () {
                $("#UserRoleStatusLabel").text("Role Added");
            },
            error: function () {
                $("#UserRoleStatusLabel").text("Role Update Failed");
            }
        });

        $('#UserRoleTypesGrid').data('kendoGrid').dataSource.read();
    }
</script>
<div>
@(
 Html.Kendo().Grid<UserRoleType>()
                .Name("UserRoleTypesGrid")
                .ToolBar(toolbar => {
                    toolbar.Template(@<text>
                    <table>
                        <tr>
                    <td>@LabelHelper.Label("AvailableRoles")</td>
                    <td>@(Html.Kendo().DropDownList()
                        .Name("AvailableRoleDropdown")
                        .DataTextField("Description")
                        .DataValueField("UserRoleTypeId")
                        .DataSource(ds => ds.Read(read => read.Action("LoadAvailableRolesByUserId", "Admin", new { area = "Admin" }).Data("onAvailableRolesByUserId")))
                    )</td>
                    <td>@Html.Kendo().Button().Name("AddUserRoleCommand").Content("Add Role").Events(events => events.Click("onUserRoleAdd"))</td>
                    </tr>
                            </table>
                        </text>);
                })
                .NoRecords()
                .Selectable(select => select.Mode(GridSelectionMode.Single).Enabled(true))
                .Columns(cols =>
                {
                    cols.Bound(x => x.UserRoleTypeId);
                    cols.Bound(x => x.Description);

                    if (SessionSecurityService.IsEditable(ManagerTask.DeleteUserRole))
                    {
                        cols.Command(x => x.Custom("Remove").Click("onUserRoleRemove"));
                    }
                })
                .DataSource(ds => ds.Ajax()
                    .ServerOperation(false)
                    .Read(read => read.Action("LoadUserRoleTypes", "Admin").Data("onAdditionalUserRole")))
)
<label id="UserRoleStatusLabel"></label>
</div>
