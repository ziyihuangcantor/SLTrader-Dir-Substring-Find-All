@using SLTrader.Tools
@model SLTrader.Models.IssueInformationModel

<style>
    large-text {
        font-size:large;
        font-weight:bold;        
    }

    larger-text {
        font-size:400%;
        font-weight: bold;
        color: white;
    }
</style>



<div>
<table>
    <thead>
        <tr>
            <td>@LabelHelper.Label("IssueInformation")</td>
        </tr>
    </thead>
    <tr>
        <td>
            @Html.Raw(string.Format("<label class='large-text'>{0}</label>", Model.SecurityNumber))
            @Html.Raw(string.Format("<label class='larger-text'>{0}</label>", Model.Ticker))             
        </td>
        <td rowspan="5">
            @(Html.Kendo().Grid(Model.ContraPartyList)
                .Name("IssueContraEntityGrid")
                .Scrollable()
                .ToolBar(toolbar =>
                    {
                        toolbar.Template(@<text>
                            @LabelHelper.Label("ContraPartyGridLabel")
                        </text>); 
                    })
                .Columns(cols =>
                    {
                        cols.Bound(x => x.ContraEntityId).Width(70).HeaderHtmlAttributes(new { @class = "gridcolumn-text-header" }).HtmlAttributes(new { @class = "gridcolumn-text" });
                        cols.Bound(x => x.AccountName).Width(170).HeaderHtmlAttributes(new { @class = "gridcolumn-text-header" }).HtmlAttributes(new { @class = "gridcolumn-text" });
                        cols.Bound(x => x.TradeType).Width(70).HeaderHtmlAttributes(new { @class = "gridcolumn-text-header" }).HtmlAttributes(new { @class = "gridcolumn-text" });
                        cols.Bound(x => x.Quantity).Width(120).Format("{0:#,##0}").HeaderHtmlAttributes(new { @class = "gridcolumn-text-header" }).HtmlAttributes(new { @class = "gridcolumn-number" });
                        cols.Bound(x => x.Amount).Width(120).Format("{0:#,##0.00}").HeaderHtmlAttributes(new { @class = "gridcolumn-text-header" }).HtmlAttributes(new { @class = "gridcolumn-number" });
                    }))
        </td>
    </tr>
    <tr>
        <td>
            @Html.Raw(string.Format("<label class='larger-text'>{0:#,##0.00}</label>", Model.Price))     
            @Html.Raw(string.Format("<label class='larger-text'>{0}</label>", Model.Description))             
        </td>
    </tr>
      <tr>
        <td>
            @Html.Raw(string.Format("<label class='larger-text'>{0:#,##0}</label>", Model.BorrowSettled))  
            @Html.Raw(string.Format("<label class='larger-text'>{0:#,##0}</label>", Model.BorrowRecallSettled))  
        </td>
         <td>
            @Html.Raw(string.Format("<label class='larger-text'>{0:#,##0.00}</label>", Model.BorrowProfit))          
        </td>
    </tr>
    <tr>
        <td>
            @Html.Raw(string.Format("<label class='larger-text'>{0:#,##0}</label>", Model.LoanSettled))  
            @Html.Raw(string.Format("<label class='larger-text'>{0:#,##0}</label>", Model.LoanRecallSettled))  
        </td>
        <td>
            @Html.Raw(string.Format("<label class='larger-text'>{0:#,##0.00}</label>", Model.LoanProfit))  
        </td>
    </tr>
 </table>
 </div>